<!doctype html>
<meta charset="utf-8">
<html>
<head>
<title> FitBit</title>


<h1> FitBit Sleep Efficiency </h1>


</head>

<body>
<div id= "fitBit"></div>
<script src="http://d3js.org/d3.v4.min.js"></script>
<script>
    var border = 3;
    var bordercolor = "black";
    var margin = {top: 20, right: 20, bottom: 50, left: 60},
                    width = 750 - margin.left - margin.right,
                    height = 250 - margin.top - margin.bottom;

    var parseTime = d3.timeParse("%Y-%m-%d");

    var x = d3.scaleTime().range([0, width]);
    var y = d3.scaleLinear().range([height, 0]);

    var div = d3.select("body")
                .append("div")
                    .attr("class", "tooltip")
                    .style("opacity", 0);
                 
     var eLine = d3.line()
                    .x(function(d) {
                        return x(d.date);
                    })
                    .y(function(d){
                        return y(d.efficiency);
                    });

       var svg1 = d3.select("body").append("svg")
                    .attr("width", width + margin.left + margin.right)
                    .attr("height", height + margin.top + margin.bottom)
                    .attr("border", border)
                  .append("g")
                    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

          var boderPath =  svg1.append("rect")
                                    .attr("x", 0)
                                    .attr("y", 0)
                                    .attr("height", height)
                                    .attr("width", width)
                                    .style("stroke", bordercolor)
                                    .style("fill", "none")
                                    .style("stroke-width", border);              


    d3.csv("csv/sleep.csv", function(error, data){
        if (error) throw error;

        data.forEach(function(d) {
            d.date = parseTime(d.date);
            d.efficiency = +d.efficiency;
            //console.log("d.date", d.date)
            //console.log("d.efficiency", d.efficiency);
        });

        x.domain(d3.extent(data, function(d) {
            return d.date;
        }));
        
        y.domain(d3.extent(data, function(d) {
            return d.efficiency;
        }));

    svg1.append("path")
        .data([data])
        .attr("class", "line4")
        .attr("d", eLine);
    
    svg1.selectAll("dot")
        .data(data)
        .enter().append("circle")
            .attr("r", 5)
            .attr("cx", function(d) {
                return x(d.date);
            })
            .attr("cy", function(d) {
                return y(d.efficiency);
                })
            .on("mouseover", function(d) {
                div.transition()
                    .duration(200)
                    .style("opacity", .9);
                div.html(d.minutesAsleep + " Minutes Asleep " + "<br/>" + d.minutesAwake + " Minutes Awake ")
                        .style("left", (d3.event.pageX) + "px")
                        .style("top", (d3.event.pageY - 28) + "px");   
                            })
            .on("mouseout", function(d) {
                div.transition()
                    .duration(500)
                    .style("opacity", 0);
            })
    svg1.append("text")
        .attr("x", width / 2)
        .attr("y", height + margin.top + 20)
        .style("text-anchor", "middle")
        .text("Date");
    svg1.append("text")
        .attr("transform", "rotate(-90)")
        .attr("y", 0 - margin.left)
        .attr("x", 0 - (height / 2))
        .attr("dy", "1em")
        .style("text-anchor", "middle")
        .text("% Sleep Efficiency");

    svg1.append("g")
        .attr("transform", "translate(0," + height +")")
        .call(d3.axisBottom(x));

    svg1.append("g")
        .call(d3.axisLeft(y));

    });





</script>
</body>




</html>